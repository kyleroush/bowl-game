{"version":3,"sources":["firestore.js","SessionsPage.js","PlayersPage.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","firestore","useStyles","makeStyles","theme","margin","spacing","extendedIcon","marginRight","SessionsPage","props","List","ListItem","Fab","variant","color","aria-label","className","onClick","doc","collection","session","id","set","players","gottenWords","setAppState","Divider","TextField","label","document","getElementById","value","PlayersPage","name","update","player","Game","onAddWords","wordCount","words","Array","fill","map","_","i","setState","addingWords","yourTurn","that","aviableWords","get","then","exists","console","log","data","concat","playerObj","filter","n","includes","loc","Math","floor","random","length","currentWord","splice","nextWord","state","push","finishTurn","newGottenWords","renderDuringTurn","Card","CardContent","Typography","resetSession","renderResets","this","component","key","button","ListItemText","inset","primary","renderAddWords","renderStartTurn","React","Component","App","setValue","newMap","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5fcf1c11.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDYIdFDQ3ccmgUHsEJC7EQuPGyX3U0BKoM\",\n    authDomain: \"reactemoji.firebaseapp.com\",\n    databaseURL: \"https://reactemoji.firebaseio.com\",\n    projectId: \"reactemoji\",\n    storageBucket: \"reactemoji.appspot.com\",\n    messagingSenderId: \"720480809303\",\n    appId: \"1:720480809303:web:c82a2de9d2d14ab1a9ce12\",\n    measurementId: \"G-C64FSH40V9\"\n  };\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nexport default firebase.firestore();","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport firestore from './firestore';\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nfunction SessionsPage(props) {\n\n  const setSession = ()=> {\n    var session = document.getElementById(\"session\").value;\n    // check session?\n    props.setAppState({session: session});\n  };\n\n  const createSession = ()=> {\n    // more details like number of words?\n\n    var doc = firestore.collection('BowlGame').doc();\n    var session = doc.id;\n\n    doc.set({\n      players: {},\n      gottenWords: []\n    })\n\n    props.setAppState({session: session});\n  };\n  return (\n    <List>\n      <ListItem>\n        <Fab variant=\"extended\" color=\"primary\" aria-label=\"create\" className={useStyles().margin} onClick={createSession}>\n          Create Session\n        </Fab>\n      </ListItem>\n      <Divider />\n      <ListItem>\n        <TextField id=\"session\" label=\"Session\" variant=\"outlined\" />\n        <Fab variant=\"extended\" color=\"primary\" aria-label=\"join\" className={useStyles().margin} onClick={setSession}>\n          Join Session\n        </Fab>\n      </ListItem>\n    </List>\n  );\n}\n\nexport default SessionsPage;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport firestore from './firestore';\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nfunction PlayersPage(props) {\n\n  const setPlayer = ()=> {\n    // console.log(\" \")\n    var name = document.getElementById(\"name\").value;\n\n\n    var update = {};\n    update[`players.${name}`] = {}\n    firestore.collection('BowlGame').doc(props.session).update(update);\n    props.setAppState({player: name});\n  };\n  return (\n    <List>\n      <ListItem>\n        <TextField id=\"name\" label=\"Name\" variant=\"outlined\" />\n        <Fab variant=\"extended\" color=\"primary\" aria-label=\"join\" className={useStyles().margin} onClick={setPlayer}>\n          Create player\n        </Fab>\n      </ListItem>\n    </List>\n  );\n}\n\nexport default PlayersPage;\n","import React from 'react';\nimport {TextField, List, ListItem, ListItemText, Fab, Card, CardContent, Typography, Divider} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport firestore from './firestore';\n\n\n\n\nclass Game extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      addingWords: true,\n      words: null,\n      yourTurn: false,\n      aviableWords: [],\n      currentWord: null,\n      gottenWords: []\n    }\n  }\n\n\n  onAddWords = () => {\n    var {wordCount, player, session} = this.props;\n    var words =Array(wordCount).fill().map((_, i) => document.getElementById(`word-${i}`).value);\n    // filter out bad words\n\n    var update = {};\n    update[`players.${player}`] = {\n      words\n    }\n    firestore.collection('BowlGame').doc(session).update(update);\n    this.setState(\n      {\n        words: words, \n        addingWords: false,\n      });\n\n    //  upload words\n  }\n\n  renderAddWords() {\n    var {wordCount} = this.props;\n    return (\n      <div>\n        <Typography>\n          Add words to the bowl\n        </Typography>\n        <List component=\"nav\"  aria-label=\"contacts\">\n\n          {Array(wordCount).fill().map((_, i) => <ListItem  key={`word-${i}`}><TextField id={`word-${i}`} label={`${i+1} word`} variant=\"outlined\" /></ListItem>)}\n\n          <ListItem button onClick={this.onAddWords} >\n            <ListItemText inset primary=\"Add Words\" />\n          </ListItem>\n        </List>\n      </div>\n      );\n\n  }\n  yourTurn= () => {\n    var { session } = this.props;\n    var that = this;\n    var aviableWords  = [];\n    var gottenWords  = [];\n\n    // getall words aviable\n    firestore.collection('BowlGame').doc(session).get().then(function(doc) {\n      if (doc.exists) {\n        console.log(\"Document data:\", doc.data().players);\n\n        gottenWords.concat(doc.data().gottenWords)\n\n        for (const player in doc.data().players) {\n          var playerObj = doc.data().players[player];\n          aviableWords = aviableWords.concat(playerObj.words)\n          console.log(`${player}: ${playerObj.words}`);\n        }\n\n        aviableWords = aviableWords.filter(n => !gottenWords.includes(n));\n    \n        var loc = Math.floor(Math.random() * aviableWords.length)\n        var currentWord = aviableWords[loc];\n        aviableWords.splice(loc, 1);\n    \n        that.setState({\n          yourTurn: true,\n          aviableWords: aviableWords,\n          currentWord: currentWord,\n          gottenWords: [],\n          doc: doc.data(),\n        })\n      } else {\n        // doc.data() will be undefined in this case\n        console.log(\"No such document!\");\n      }\n    });  \n\n  }\n\n  nextWord = () => {\n    var {currentWord, aviableWords, gottenWords} = this.state;\n\n    var loc = Math.floor(Math.random() * aviableWords.length)\n    \n    gottenWords.push(currentWord)\n    currentWord = aviableWords[loc];\n    aviableWords.splice(loc, 1);\n    this.setState({\n      aviableWords: aviableWords,\n      currentWord: currentWord,\n      gottenWords: gottenWords\n    })\n  }\n\n  finishTurn = () => {\n    \n    var {gottenWords, doc} = this.state;\n    var {session} = this.props;\n\n    var newGottenWords = gottenWords.concat(doc.gottenWords);\n\n    firestore.collection('BowlGame').doc(session).update({\n      gottenWords: newGottenWords\n    });\n    // upload gotten words\n    this.setState({\n      yourTurn: false,\n      aviableWords: [],\n      currentWord: null,\n      gottenWords: []\n    })\n  }\n\n  renderStartTurn() {\n\n    return (\n      <div>\n        <Fab variant=\"extended\" color=\"primary\" aria-label=\"join\" onClick={this.yourTurn}>\n          Start Turn\n        </Fab>\n      </div>\n    )\n  }\n\n  renderDuringTurn = () => {\n    var {currentWord, aviableWords} = this.state;\n    return(\n      <div>\n        <Card>      \n          <CardContent>\n            <Typography color=\"textPrimary\" >\n              your word is \n            </Typography>\n            <Typography color=\"textSecondary\" >\n              {currentWord}\n            </Typography>\n          </CardContent>\n        </Card>\n\n        {aviableWords.length !==0 && <Fab variant=\"extended\" color=\"primary\" aria-label=\"join\" onClick={this.nextWord}>\n          Gotten Word\n        </Fab>}\n        <Fab variant=\"extended\" color=\"primary\" aria-label=\"join\" onClick={this.finishTurn}>\n          End Turn\n        </Fab>\n      </div>\n    )\n    \n  }\n\n  resetSession = () => {\n\n    // make a request to reset game\n\n    this.setState({\n      addingWords: true,\n      words: null,\n      yourTurn: false,\n      aviableWords: [],\n      currentWord: null,\n      gottenWords: []\n    });\n  }\n\n  renderResets = () => {\n    return(\n      <div>\n        <Divider />\n        <Fab variant=\"extended\" color=\"secondary\" aria-label=\"join\">\n          Put words back in bowl\n        </Fab>\n        <Fab variant=\"extended\" color=\"secondary\" aria-label=\"join\" onClick={this.resetSession}>\n          End Game and start new?\n        </Fab>\n      </div>\n    )\n    \n  }\n\n  render() {\n    var {session, player} = this.props;\n    var {addingWords, yourTurn} = this.state;\n\n    return (\n      <div>\n        <h1>Hello, {player}! You have joined {session}.</h1>\n        {addingWords && this.renderAddWords()}\n        {!addingWords && (yourTurn? this.renderDuringTurn(): this.renderStartTurn())}\n        {!addingWords && !yourTurn && this.renderResets()}\n      </div>\n    );\n  }\n}\nexport default Game;\n\n\n\n// add words\n// get a word","import React from 'react';\nimport SessionsPage from './SessionsPage';\nimport PlayersPage from './PlayersPage';\nimport Game from './Game';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      session: null,\n      player: null\n    };\n  }\n\n  setValue = (newMap) => {\n    this.setState(newMap);\n  };\n\n\n\n  render() {\n    var {session, player} = this.state;\n\n    return (\n      <div>\n        {session == null && <SessionsPage setAppState={this.setValue}/>}\n        {session != null && player == null && <PlayersPage session={session} setAppState={this.setValue}/>}\n        {session != null && player != null && <Game session={session} player={player} wordCount={3}/>}\n      </div>\n    )\n    // if (session == null) {\n    //   return <SessionsPage setSession={null}/>\n    // }\n    // if (player == null) {\n    //   return <PlayersPage setSession={null}/>\n    // }\n    // return <h1>Hello, {session}</h1>;\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}