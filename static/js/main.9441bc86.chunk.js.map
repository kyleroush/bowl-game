{"version":3,"sources":["firestore.js","SessionsPage.js","PlayersPage.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","firestore","useStyles","makeStyles","theme","margin","spacing","extendedIcon","marginRight","SessionsPage","props","List","warning","ListItem","Typography","color","TextField","id","label","variant","Divider","Fab","aria-label","className","onClick","doc","session","document","getElementById","value","collection","set","players","gottenWords","setAppState","get","then","exists","PlayersPage","name","update","player","Game","onAddWords","wordCount","words","Array","fill","map","_","i","setState","addingWords","yourTurn","that","aviableWords","console","log","data","concat","playerObj","filter","n","includes","loc","Math","floor","random","length","currentWord","splice","nextWord","state","push","finalWord","newGottenWords","finishTurn","renderDuringTurn","Card","CardContent","resetSession","reuseWords","renderResets","this","component","key","button","ListItemText","inset","primary","renderAddWords","renderStartTurn","React","Component","App","setValue","newMap","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9441bc86.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDYIdFDQ3ccmgUHsEJC7EQuPGyX3U0BKoM\",\n    authDomain: \"reactemoji.firebaseapp.com\",\n    databaseURL: \"https://reactemoji.firebaseio.com\",\n    projectId: \"reactemoji\",\n    storageBucket: \"reactemoji.appspot.com\",\n    messagingSenderId: \"720480809303\",\n    appId: \"1:720480809303:web:c82a2de9d2d14ab1a9ce12\",\n    measurementId: \"G-C64FSH40V9\"\n  };\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nexport default firebase.firestore();","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport firestore from './firestore';\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nfunction SessionsPage(props) {\n\n  const setSession = ()=> {\n    var session = document.getElementById(\"session\").value;\n\n    firestore.collection('BowlGame').doc(session).get().then(function(doc) {\n\n      if (doc.exists) {\n        props.setAppState({session: session});\n      }else {\n        props.setAppState({warning: \"this session doesnt exist\"});\n      }\n    });\n\n  };\n\n  const createSession = ()=> {\n\n    var session = document.getElementById(\"session\").value;\n    var doc;\n    if (session === \"\") {\n      doc = firestore.collection('BowlGame').doc();\n      session = doc.id;\n\n      doc.set({\n        players: {},\n        gottenWords: []\n      })\n\n      props.setAppState({session: session});\n    } else {\n\n      firestore.collection('BowlGame').doc(session).get()\n        .then(function(doc) {\n          if (!doc.exists) {\n            doc = firestore.collection('BowlGame').doc(session);\n            props.setAppState({session: session});\n            doc.set({\n              players: {},\n              gottenWords: []\n            })\n          }\n        });\n    }\n  };\n  return (\n    <List>\n      {props.warning !== \"\" && \n        <ListItem>\n          <Typography color=\"textSecondary\" >\n            {props.warning}\n          </Typography>\n        </ListItem>\n      }\n      <ListItem>\n        <TextField id=\"session\" label=\"Session\" variant=\"outlined\" />\n      </ListItem>\n      <Divider />\n      <ListItem>\n        <Fab variant=\"extended\" color=\"primary\" aria-label=\"create\" className={useStyles().margin} onClick={createSession}>\n          Create Session\n        </Fab>\n        <Fab variant=\"extended\" color=\"primary\" aria-label=\"join\" className={useStyles().margin} onClick={setSession}>\n          Join Session\n        </Fab>\n      </ListItem>\n    </List>\n  );\n}\n\nexport default SessionsPage;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport firestore from './firestore';\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nfunction PlayersPage(props) {\n\n  const setPlayer = ()=> {\n    // console.log(\" \")\n    var name = document.getElementById(\"name\").value;\n\n\n    var update = {};\n    update[`players.${name}`] = {}\n    firestore.collection('BowlGame').doc(props.session).update(update);\n    props.setAppState({player: name});\n  };\n  return (\n    <List>\n      <ListItem>\n        <TextField id=\"name\" label=\"Name\" variant=\"outlined\" />\n        <Fab variant=\"extended\" color=\"primary\" aria-label=\"join\" className={useStyles().margin} onClick={setPlayer}>\n          Create player\n        </Fab>\n      </ListItem>\n    </List>\n  );\n}\n\nexport default PlayersPage;\n","import React from 'react';\nimport {TextField, List, ListItem, ListItemText, Fab, Card, CardContent, Typography, Divider} from '@material-ui/core';\nimport firestore from './firestore';\n\nclass Game extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      addingWords: true,\n      words: null,\n      yourTurn: false,\n      aviableWords: [],\n      currentWord: null,\n      gottenWords: []\n    }\n  }\n\n  onAddWords = () => {\n    var {wordCount, player, session} = this.props;\n    var words =Array(wordCount).fill().map((_, i) => document.getElementById(`word-${i}`).value);\n    // filter out bad words\n\n    var update = {};\n    update[`players.${player}`] = {\n      words\n    }\n    firestore.collection('BowlGame').doc(session).update(update);\n    this.setState(\n      {\n        words: words, \n        addingWords: false,\n      });\n  }\n\n  renderAddWords() {\n    var {wordCount} = this.props;\n    return (\n      <div>\n        <Typography>\n          Add words to the bowl\n        </Typography>\n        <List component=\"nav\"  aria-label=\"contacts\">\n\n          {Array(wordCount).fill().map((_, i) => <ListItem  key={`word-${i}`}><TextField id={`word-${i}`} label={`${i+1} word`} variant=\"outlined\" /></ListItem>)}\n\n          <ListItem button onClick={this.onAddWords} >\n            <ListItemText inset primary=\"Add Words\" />\n          </ListItem>\n        </List>\n      </div>\n      );\n  }\n\n  yourTurn= () => {\n    var { session } = this.props;\n    var that = this;\n    var aviableWords  = [];\n    var gottenWords  = [];\n\n    // getall words aviable\n    firestore.collection('BowlGame').doc(session).get().then(function(doc) {\n      if (doc.exists) {\n        console.log(\"Document data:\", doc.data().players);\n\n        gottenWords = gottenWords.concat(doc.data().gottenWords)\n\n        for (const player in doc.data().players) {\n          var playerObj = doc.data().players[player];\n          aviableWords = aviableWords.concat(playerObj.words)\n          console.log(`${player}: ${playerObj.words}`);\n        }\n\n        aviableWords = aviableWords.filter(n => !gottenWords.includes(n));\n    \n        var loc = Math.floor(Math.random() * aviableWords.length)\n        var currentWord = aviableWords[loc];\n        aviableWords.splice(loc, 1);\n    \n        that.setState({\n          yourTurn: true,\n          aviableWords: aviableWords,\n          currentWord: currentWord,\n          gottenWords: [],\n          doc: doc.data(),\n        })\n      } else {\n        // doc.data() will be undefined in this case\n        console.log(\"No such document!\");\n      }\n    });  \n  }\n\n  nextWord = () => {\n    var {currentWord, aviableWords, gottenWords} = this.state;\n\n    var loc = Math.floor(Math.random() * aviableWords.length)\n    \n    gottenWords.push(currentWord)\n    currentWord = aviableWords[loc];\n    aviableWords.splice(loc, 1);\n    this.setState({\n      aviableWords: aviableWords,\n      currentWord: currentWord,\n      gottenWords: gottenWords\n    })\n  }\n\n  finalWord = () => {\n    var {gottenWords, doc, currentWord} = this.state;\n    var {session} = this.props;\n    gottenWords.push(currentWord)\n\n    var newGottenWords = gottenWords.concat(doc.gottenWords);\n\n    firestore.collection('BowlGame').doc(session).update({\n      gottenWords: newGottenWords\n    });\n    // upload gotten words\n    this.setState({\n      yourTurn: false,\n      aviableWords: [],\n      currentWord: null,\n      gottenWords: []\n    })\n  }\n\n  finishTurn = () => {\n    var {gottenWords, doc} = this.state;\n    var {session} = this.props;\n\n    var newGottenWords = gottenWords.concat(doc.gottenWords);\n\n    firestore.collection('BowlGame').doc(session).update({\n      gottenWords: newGottenWords\n    });\n    // upload gotten words\n    this.setState({\n      yourTurn: false,\n      aviableWords: [],\n      currentWord: null,\n      gottenWords: []\n    })\n  }\n\n  renderStartTurn() {\n\n    return (\n      <div>\n        <Fab variant=\"extended\" color=\"primary\" aria-label=\"join\" onClick={this.yourTurn}>\n          Start Turn\n        </Fab>\n      </div>\n    )\n  }\n\n  renderDuringTurn = () => {\n    var {currentWord, aviableWords} = this.state;\n    return(\n      <div>\n        <Card>      \n          <CardContent>\n            <Typography color=\"textPrimary\" >\n              your word is \n            </Typography>\n            <Typography color=\"textSecondary\" >\n              {currentWord}\n            </Typography>\n          </CardContent>\n        </Card>\n\n        {\n          aviableWords.length !==0? \n            <Fab variant=\"extended\" color=\"primary\" aria-label=\"join\" onClick={this.nextWord}>\n              Gotten Word\n            </Fab>: \n            <Fab variant=\"extended\" color=\"primary\" aria-label=\"join\" onClick={this.finalWord}>\n              Gotten Final Word\n            </Fab>\n        }\n        <Fab variant=\"extended\" color=\"primary\" aria-label=\"join\" onClick={this.finishTurn}>\n          End Turn\n        </Fab>\n      </div>\n    )\n  }\n\n  resetSession = () => {\n    var {session} = this.props;\n    var {doc} = this.state;\n    var update = {};\n\n    for (const player in doc.players) {\n      update[player] = {}\n    }\n\n    firestore.collection('BowlGame').doc(session).update({\n      gottenWords: [],\n      players: update\n    });\n\n    this.setState({\n      addingWords: true,\n      words: null,\n      yourTurn: false,\n      aviableWords: [],\n      currentWord: null,\n      gottenWords: []\n    });\n  }\n\n  reuseWords = () => {\n    var {session} = this.props\n\n    // make a request to reset game\n    firestore.collection('BowlGame').doc(session).update({\n      gottenWords: []\n    });\n\n    this.setState({\n      addingWords: false,\n      words: null,\n      yourTurn: false,\n      aviableWords: [],\n      currentWord: null,\n      gottenWords: []\n    });\n  }\n\n  renderResets = () => {\n    return(\n      <div>\n        <Divider />\n        <Fab variant=\"extended\" color=\"secondary\" aria-label=\"join\" onClick={this.reuseWords} >\n          Put words back in bowl\n        </Fab>\n        <Fab variant=\"extended\" color=\"secondary\" aria-label=\"join\" onClick={this.resetSession} >\n          End Game and start new?\n        </Fab>\n      </div>\n    )\n  }\n\n  render() {\n    var {session, player} = this.props;\n    var {addingWords, yourTurn} = this.state;\n\n    return (\n      <div>\n        <h1>Hello, {player}! You have joined {session}.</h1>\n        {addingWords && this.renderAddWords()}\n        {!addingWords && (yourTurn? this.renderDuringTurn(): this.renderStartTurn())}\n        {!addingWords && !yourTurn && this.renderResets()}\n      </div>\n    );\n  }\n}\nexport default Game;\n","import React from 'react';\nimport SessionsPage from './SessionsPage';\nimport PlayersPage from './PlayersPage';\nimport Game from './Game';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      session: null,\n      player: null,\n      warning: \"\",\n    };\n  }\n\n  setValue = (newMap) => {\n    this.setState(newMap);\n  };\n\n\n\n  render() {\n    var {session, player, warning} = this.state;\n\n    return (\n      <div>\n        {session == null && <SessionsPage setAppState={this.setValue}/>}\n        {session != null && player == null && <PlayersPage session={session} setAppState={this.setValue} warning={warning} />}\n        {session != null && player != null && <Game session={session} player={player} wordCount={3}/>}\n      </div>\n    )\n    // if (session == null) {\n    //   return <SessionsPage setSession={null}/>\n    // }\n    // if (player == null) {\n    //   return <PlayersPage setSession={null}/>\n    // }\n    // return <h1>Hello, {session}</h1>;\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}